{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.8337a024.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1mjlu\",\"card\":\"Cards_card__V8jBh\",\"infected\":\"Cards_infected__3TiBR\",\"recovered\":\"Cards_recovered__27Kay\",\"deaths\":\"Cards_deaths__3pLJB\"};","import React from 'react';\r\nimport{ Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data:{confirmed, recovered, deaths, lastUpdate }}) => {\r\n    console.log(confirmed);\r\n    if(!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start = {0} end = {confirmed.value} duration = {2.5} separator = \",\" />\r\n                        </Typography>\r\n                        <Typography color= \"textSecondary\">{new Date(lastUpdate).toDateString() }</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start = {0} end = {recovered.value} duration = {2.5} separator = \",\" />\r\n                        </Typography>\r\n                        <Typography color= \"textSecondary\">{new Date(lastUpdate).toDateString() }</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start = {0} end = {deaths.value} duration = {2.5} separator = \",\" />\r\n                        </Typography>\r\n                        <Typography color= \"textSecondary\">{new Date(lastUpdate).toDateString() }</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused due to COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if(country) {\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n\r\n\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n        return{ confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`); //do not use quotation marks(' or \") use ` otherwise error(no-template-curly-in-string).\r\n        \r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n    }catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n    export const fetchCountries = async() => {\r\n        try {\r\n            const { data: { countries }} = await axios.get(`${url}/countries`);\r\n\r\n            return countries.map((country)=> country.name)\r\n            \r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ( {data:{ confirmed, deaths, recovered }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    }\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = (\r\n   dailyData.length\r\n  ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [{\r\n          data: dailyData.map(({ confirmed }) => confirmed),\r\n          label: 'Infected',\r\n          borderColor: '#3333ff',\r\n          fill: true,\r\n\r\n        }, {\r\n          data: dailyData.map(({ deaths }) => deaths),\r\n          label: 'Deaths',\r\n          borderColor: 'red',\r\n          backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n          fill: true,\r\n\r\n        }],\r\n      }}\r\n    />\r\n  ) : null\r\n  );\r\n\r\n  const barChart = (\r\n    confirmed\r\n    ?(\r\n      <Bar\r\n      data={{\r\n        labels: ['Infected', 'Recovered', 'Deaths'],\r\n        datasets: [{\r\n          label: 'People',\r\n          backgroundColor: [\r\n            'rgba(0, 0, 250, 0.5)',\r\n            'rgba(0, 255, 0, 0.5)',\r\n            'rgba(255, 0, 0, 0.5)',\r\n          ],\r\n          data:[confirmed.value, recovered.value, deaths.value]\r\n        }]\r\n\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}`},\r\n      }}\r\n      \r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country? barChart : lineChart}\r\n\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    \r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        \r\n        fetchAPI();\r\n\r\n    }, [setFetchedCountries]); \r\n    \r\n\r\n    return(\r\n        <FormControl className={styles.FormControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country} </option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\nexport default CountryPicker;","import React from 'react' ;\r\n\r\n// import Cards from './components/Cards/Cards';\r\n// import Chart from './components/Chart/Chart';\r\n// import CountryPicker from './components/CountryPicker/CountryPicker'\r\n// The code above is very repeatitive so we can shorten it down.\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';//whenever we have index files we don't need to specify the /index, just specify the folder name it will search for the index file.\r\n\r\nimport coronaImage from './images/image.png'\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({data: fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n\r\n        this.setState({ data: fetchedData, country: country })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { data, country} = this.state;\r\n        return (\r\n            <div className= {styles.container}>\r\n                <img className={styles.image} src= {coronaImage} alt=\"covid-19\" />\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react' ;\r\nimport ReactDom from 'react-dom' ;\r\n\r\nimport App from './App' ;\r\n\r\nReactDom.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1Fuh-\",\"image\":\"App_image__1c7-z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__ns5oX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3JQ7e\"};","module.exports = __webpack_public_path__ + \"static/media/image.f3e6fbe5.png\";"],"sourceRoot":""}